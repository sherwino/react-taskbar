# This is a basic workflow to help you get started with Actions

name: Test PR

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events to the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      name:
        description: 'Who do you want me to say hello to?'
        required: false
        default: 'Sherwino'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Sets up node
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 14.x
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: true
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
          cache: npm
          # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: ./package-lock.json

      # Test workflow_dispatch
      - name: Test workflow dispatch
        run: echo "Hello ${{ github.event.inputs.name }}, what brings you to this CI?!"
      
      # Install node / npm dependencies
      - name: Install NPM Dependencies
        run: npm ci
        
      # Run test suite
      - name: Run test suite
        run: npm run test

      # Runs build command to check if there are any build warnings or failures
      - name: Run build command
        run: |
          echo "Lets build it!"
          echo "If there are any warnings the build will fail."
          npm run build
