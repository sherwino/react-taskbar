{"version":3,"sources":["Taskbar/logo.svg","Taskbar/task.svg","Taskbar/explorer.svg","Taskbar/firefox.svg","Taskbar/chrome.svg","Taskbar/vscode.svg","Taskbar/outlook.svg","Windows/explorer.png","T8EASER7VGFWA1B124.js","Taskbar/Taskbar.styles.js","Taskbar/Taskbar.js","Windows/Window.js","VSCode/VSCode.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","Smallchat","config","slackTeamId","scChannelId","slackChannelId","uid","planId","accountCreated","appearance","brand_color","contact_dismissible","contact_enabled","contact_field_label","contact_immediately","contact_prompt","contact_reply","custom_css","hide_logo","hide_team_icon","launcher_pos","launcher_prompt","launcher_type","messenger_blank","messenger_entry","messenger_prompt","name_field_label","offline_greeting","text_color","behavior","avatar_config","friday","from","to","monday","operating_hours","saturday","sunday","thursday","timezone","tuesday","wednesday","addEventListener","styles","document","createElement","rel","href","head","appendChild","script","async","src","body","MainContainer","styled","div","_templateObject","Clock","nav","_templateObject2","_templateObject3","Time","_templateObject4","button","_templateObject5","App","_useState","useState","time","Date","_useState2","Object","slicedToArray","dataTime","setTime","useEffect","setInterval","react_default","a","logo","id","className","alt","task","explorer","outlook","firefox","chrome","vscode","toLocaleTimeString","style","display","alignItems","justifyContent","border","background","backgroundImage","concat","Background","backgroundRepeat","backgroundSize","Window","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","width","height","x","y","_this2","lib","bounds","size","position","onDragStop","e","d","setState","onResize","direction","ref","delta","objectSpread","React","Component","paddingLeft","color","boxSizing","VSCode","JSON","stringify","toString","Fragment","index_min_default","url","allowFullScreen","Windows_Window","src_VSCode_VSCode","Taskbar_Taskbar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17b6ddc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/task.369aa1bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/explorer.48101c11.svg\";","module.exports = __webpack_public_path__ + \"static/media/firefox.3ce8d59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/chrome.f3b6c54c.svg\";","module.exports = __webpack_public_path__ + \"static/media/vscode.6e1a6f9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/outlook.8ea4700d.svg\";","module.exports = __webpack_public_path__ + \"static/media/explorer.45c49d7f.png\";","window.Smallchat = {\n  config: {\n    slackTeamId: \"T8EASER7V\",\n    scChannelId: \"-LXqp-90UWXcpHp-vZuM\",\n    slackChannelId: \"GFWA1B124\",\n    uid: \"-LXqoj4dgeBcQ2i3dO68\",\n    planId: null,\n    accountCreated: 1549255504391\n  },\n  appearance: {\n    brand_color: \"#444944\",\n    contact_dismissible: false,\n    contact_enabled: true,\n    contact_field_label: \"Email\",\n    contact_immediately: false,\n    contact_prompt: \"Add your name and email, so that I can keep in touch:\",\n    contact_reply:\n      \"Thanks for reaching out {{name}}, let's see if anybody is available...\",\n    custom_css: \"\",\n    hide_logo: false,\n    hide_team_icon: false,\n    launcher_pos: \"right\",\n    launcher_prompt: \"\",\n    launcher_type: \"button\",\n    messenger_blank: \"Send a message, and I will reply as soon as I can.\",\n    messenger_entry: \"Send me a message...\",\n    messenger_prompt: \"Message Sherwin!\",\n    name_field_label: \"Name\",\n    offline_greeting:\n      \"Looks like nobody is online at the moment, but I should be getting an email with your information and I can contact you back.\",\n    text_color: \"#FFFFFF\"\n  },\n  behavior: {\n    avatar_config: 0,\n    friday: { from: \"9:00\", to: \"21:00\" },\n    monday: { from: \"9:00\", to: \"21:00\" },\n    operating_hours: true,\n    saturday: { from: \"13:00\", to: \"16:00\" },\n    sunday: { from: \"13:00\", to: \"16:00\" },\n    thursday: { from: \"9:00\", to: \"21:00\" },\n    timezone: \"America/New_York\",\n    tuesday: { from: \"9:00\", to: \"21:00\" },\n    wednesday: { from: \"9:00\", to: \"21:00\" }\n  }\n};\nwindow.addEventListener(\n  \"load\",\n  function() {\n    var styles = document.createElement(\"link\");\n    styles.rel = \"stylesheet\";\n    styles.href = \"./messenger.css\";\n    document.head.appendChild(styles);\n    var script = document.createElement(\"script\");\n    script.async = true;\n    script.src = \"https://static.small.chat/messenger.js\";\n    document.body.appendChild(script);\n  },\n  false\n);\n","import styled from \"styled-components\";\n\n\nconst MainContainer = styled.div`\n  width: 100%;\n  height: 52px;\n  display: flex;\n  background: rgba(22, 28, 22, 0.8);\n  border: 1px solid #aaa;\n  box-sizing: border-box;\n  justify-content: flex-start;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst NavBar = styled.nav`\n  width: 100vw;\n  background-color: darkgrey;\n  height: 80px;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto;\n  `;\n\n  const Clock = styled.div`\n    width: 6rem;\n    color: #fff;\n    margin: 0 1rem 0 0;\n   `;\n\n  const Time = styled.p`\n    font-size: 15px;\n    color: white;\n\n  `;\n\n  const Button = styled.button`\n    margin-top: 10px;\n    width: 100px;\n    height: 40px;\n    border-radius: 18.5px;\n    background-color: darkgray;\n  `;\n\n\n  export {\n      Clock, \n      MainContainer,\n      NavBar,\n      Time, \n      Button\n  }","import React, { useEffect, useState } from \"react\";\nimport { MainContainer, Clock, Time } from './Taskbar.styles';\n\nimport logo from './logo.svg';\nimport task from './task.svg';\nimport explorer from './explorer.svg';\nimport firefox from './firefox.svg';\nimport chrome from './chrome.svg';\nimport vscode from './vscode.svg';\nimport outlook from './outlook.svg';\n\nimport './Taskbar.css';\n\n\nconst App = () => {\n  const [dataTime, setTime] = useState({ time: new Date() })\n  const { time } = dataTime\n\n  const currentTime = () => setTime({ time: new Date() });\n\n  useEffect(() => {\n    setInterval(() => currentTime(), 1000);\n\n  }, []);\n\n\n  return (\n    <MainContainer>\n        <img src={logo} id=\"start\" className=\"App-logo\" alt=\"logo\" />\n      <div id=\"taskbar-apps\">\n        <img src={task} className=\"icon\" alt=\"logo\" />\n        <img src={explorer} className=\"icon\" alt=\"logo\" />\n        <img src={outlook} className=\"icon\" alt=\"logo\" />\n        <img src={firefox} className=\"icon\" alt=\"logo\" />\n        <img src={chrome} className=\"icon\" alt=\"logo\" />\n        <img src={vscode} className=\"icon\" alt=\"logo\" />\n      </div>\n      <Clock>\n        <Time>{time.toLocaleTimeString()}</Time>\n      </Clock>\n    </MainContainer>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport Background from \"./explorer.png\";\n\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"#f0f0f0\",\n  backgroundImage: `url(${Background})`,\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nclass Window extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      width: 730,\n      height: 590,\n      x: 10,\n      y: 10\n    };\n  }\n\n  render() {\n    return (\n      <Rnd\n        id=\"explorer\"\n        bounds=\"window\"\n        style={style}\n        size={{ width: this.state.width, height: this.state.height }}\n        position={{ x: this.state.x, y: this.state.y }}\n        onDragStop={(e, d) => {\n          this.setState({ x: d.x, y: d.y });\n        }}\n        onResize={(e, direction, ref, delta, position) => {\n          this.setState({\n            width: ref.style.width,\n            height: ref.style.height,\n            ...position\n          });\n        }}\n      >\n      </Rnd>\n    );\n  }\n}\n\nexport default Window;","import React from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport Iframe from \"react-iframe\";\n\nconst style = {\n  background: \"#000\",\n  paddingLeft: \"15px\",\n  width: \"100%\",\n  color: \"#fff\",\n  boxSizing: \"border-box\"\n};\n\nclass VSCode extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      width: \"830\",\n      height: \"690\",\n      x: \"100\",\n      y: \"40\"\n    };\n  }\n\n\n  \n  render() {\n  const position = JSON.stringify({ x: this.state.x, y: this.state.y });\n  const width = this.state.width.toString();\n  const height = this.state.height.toString();\n\n    return (\n      <>\n    <Rnd\n      id=\"window\"\n      bounds=\"window\"\n      size={{ width, height }}\n      position={position}\n      onDragStop={(e, d) => {\n        this.setState({ x: d.x, y: d.y });\n      }}\n      onResize={(e, direction, ref, delta, position) => {\n        this.setState({\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position\n        });\n      }}\n    >\n    <div style={style}>Visual Studio Code</div>\n    {/* https://winodoescors.sherwino.repl.co/ */}\n    <Iframe url=\"https://vscode-web-test-playground.azurewebsites.net/\"\n      width={width}\n      height={height}\n      position={position}\n      id=\"vscode-iframe\"\n      className=\"iframe\"\n      display=\"initial\"\n      allowFullScreen\n      />\n    </Rnd>\n      </>\n    );\n  }\n}\n\nexport default VSCode;","import React, { Component } from 'react';\nimport Taskbar from './Taskbar/Taskbar';\nimport Window from './Windows/Window';\nimport './App.css';\nimport VSCode from './VSCode/VSCode';\nimport './messenger.css';\nimport './T8EASER7VGFWA1B124'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <header id=\"header\" className=\"App-header\">\n          <h1 className=\"App\">\n            React Taskbar\n          </h1>\n        </header>\n        <Window/>\n        <VSCode/>\n        <Taskbar/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}